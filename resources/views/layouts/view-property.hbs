<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{pageTitle}} | {{@root.platform.name}}</title>
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    {{#> commons/stylesheets}}
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/assets/owl.carousel.min.css">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/assets/owl.theme.default.min.css">
        <link rel="stylesheet" href="/css/agentpage.css">
    {{/ commons/stylesheets}}
</head>
<body>
    <header>
        {{> agent-landing/header}}
    </header>
    <main>
        {{{body}}}
    </main>
    <footer class="main-color">
        {{> agent-landing/footer}}
    </footer>
    {{#> commons/scripts}}
        <script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/owl.carousel.min.js"></script>
        <script>
        initCounter();

        let script = document.createElement('script');
        script.src = 'https://maps.googleapis.com/maps/api/js?key={{googleMapApiKey}}&callback=initMap';
        script.defer = true;
        document.head.appendChild(script);

        document.addEventListener('DOMContentLoaded', function() {
            let gallery_modal = document.querySelectorAll('.modal.gallery-modal');
            console.log(gallery_modal);

            $('#tower.owl-carousel').owlCarousel({
                loop: true,
                margin: 10,
                responsive: {
                    0: {
                        items: 1
                    },
                    600: {
                        items: 1
                    },
                    1000: {
                        items: 1
                    }
                },
                mouseDrag: false,
                touchDrag: false,
                onInitialized: counter,
                onChanged: counter,
                nav: true,
                navText : ["<i class='material-icons medium main-color-text shift-right'>keyboard_arrow_left</i>","<i class='material-icons medium main-color-text shift-left'>keyboard_arrow_right</i>"]
            });

            document.querySelectorAll(".unit").forEach((unit) => {
                unit.addEventListener("click", function(e) {
                    let URLParams = new URLSearchParams({
                       tower: e.currentTarget.dataset.tower,
                       floor: e.currentTarget.parentElement.dataset.floor,
                       unit: e.currentTarget.dataset.unit
                    });

                    fetch("/view-property/{{@root.data.listing.qualifiedName}}/unit-preview?" + URLParams.toString()).then((response) => {
                        return response.text();
                    }).then((html) => {
                        document.querySelector("#unit-preview-container").innerHTML = html;
                        initFullWidthCarousel();
                        M.Modal.getInstance(document.querySelector("#unit-preview")).open();
                    });
                });
            });

            document.querySelector("#share").addEventListener("click", function(e) {
                e.preventDefault;
                var shareableLink = window.location.href;

                if(navigator.share) {
                    navigator.share({
                    title: "{{@root.data.listing.name}} by {{@root.data.listing.owner}}",
                    text: `Check out {{@root.data.listing.name}} and our other listings in our platform through this link!`,
                    url: shareableLink 
                    }).then(() => 
                        M.toast({html: '<span class="default-size-span">Successful share!<button class="btn-flat toast-action" onClick="dismissToast()">ok</button></span>'})
                    ).catch((err) => {
                        M.toast({html: '<span class="default-size-span">Failed to share.<button class="btn-flat toast-action" onClick="dismissToast()">ok</button></span>'})
                    });
                } else {
                    document.querySelector("#shareable-link-container").value = shareableLink;
                    M.Modal.getInstance(document.querySelector("#share-modal")).open();
                }
            });

            document.querySelectorAll(".lead").forEach((element) => {
                element.addEventListener("click", function(e) {
                    M.Modal.getInstance(document.querySelector("#lead-form")).open();
                });
            })

            document.querySelector("#copy-shareable-link").addEventListener("click", function(e) {
                var shareableLink = document.querySelector("#shareable-link-container").value;

                navigator.clipboard.writeText(shareableLink).then((e) => {
                    M.toast({html: '<span class="default-size-span">Share link copied.<button class="btn-flat toast-action" onClick="dismissToast()">ok</button></span>'});
                }).catch((err) => {
                    M.toast({html: '<span class="default-size-span">Failed to copy link. Please contact Estates Lookout support regarding this problem.<button class="btn-flat toast-action" onClick="dismissToast()">ok</button></span>'});
                })
            });

            M.Modal.init(document.querySelectorAll(".modal"));
            M.Tabs.init(document.querySelectorAll(".tabs"));
            M.Materialbox.init(document.querySelectorAll(".materialboxed"), {
                onOpenEnd: function() {
                    let materialbox_caption = document.querySelectorAll(".materialbox-caption")[0];
                    let common_caption = document.createElement("div");
                    common_caption.classList.add("common-caption");
                    common_caption.textContent = "Tap on anywhere to exit";
                    materialbox_caption.parentNode.appendChild(common_caption);
                },
                onCloseStart: function() {
                    let common_caption = document.querySelectorAll(".common-caption");

                    common_caption.forEach((element) => {
                        element.parentNode.removeChild(element);
                    });
                }
            });

            {{> commons/flash-message framework="materialize"}}
        });

        function isElementVisibleInView(direction, partial, container, element) {
            if(direction === "vertical") {

                let containerTop = container.scrollTop;
                let containerBottom = containerTop + container.clientHeight;

                let elementTop = element.offsetTop;
                let elementBottom = elementTop + element.clientHeight;

                let isTotalInView = (elementTop >= containerTop && elementBottom <= containerBottom);
                let isPartialInView = partial && ((elementTop < containerTop && elementBottom > containerTop) || (elementBottom > containerBottom && elementTop < containerBottom));
                
                return (isTotalInView || isPartialInView);

            } else {

                let containerLeft = container.offsetLeft;
                let containerRight = containerLeft + container.clientWidth;

                let elementLeft = element.offsetLeft;
                let elementRight = elementLeft + element.clientWidth;

                let isTotalInView = (elementLeft >= containerLeft && elementRight <= containerRight);
                let isPartialInView = partial && ((elementLeft < containerLeft && elementRight > containerLeft) || (elementRight > containerRight && elementLeft < containerRight));
                

                return (isTotalInView || isPartialInView);

            }
        }

        function getElementIntoView(element) {
            element.scrollIntoView();
        }

        function setImageToBig(img) {
            // Get the expanded image
            var expandImg = document.getElementById("big-image");
            // Get the image text
            var imgText = document.getElementById("big-image-text");
            // Use the same src in the expanded image as the image being clicked on from the grid
            expandImg.src = img.src;
            // Use the value of the alt attribute of the clickable image as text inside the expanded image
            imgText.innerHTML = img.alt;
            // Show the container element (hidden with CSS)
            expandImg.parentElement.style.display = "block";
        }

        function initCounter() {
            let itemCount = $("#tower .item").length;
            $("#tower-carousel-index .max").text(itemCount);
        }

        function counter(event) {
            if (!event.namespace) {
                return;
            }

            var slides = event.relatedTarget;
            $("#tower-carousel-index .min").text(slides.relative(slides.current()) + 1);
        }

        function propertyDetails() {
            let element = document.querySelector('#property-tabs');
            M.Tabs.getInstance(element).select('#property-details');
        }

        function initMap() {
            {{#if (and @root.data.listing.coordinates.latitude @root.data.listing.coordinates.longitude)}}
                const LatLng = { lat: {{@root.data.listing.coordinates.latitude}}, lng: {{@root.data.listing.coordinates.longitude}} };
                const map = new google.maps.Map(document.getElementById("map"), {
                    zoom: 15,
                    center: LatLng
                });
                new google.maps.Marker({
                    position: LatLng,
                    map,
                    title: "{{@root.data.listing.name}}"
                });
            {{/if}}
            return;
        }
    </script>
    {{/ commons/scripts}}
</body>
</html>
